<?php

// Application Passwords Plugin Options
// ------------------------------------
// PEAR database DSN for performing the query.
$config['application_passwords_db_dsn'] = 'mysql://user:password@localhost/table';

// The SQL queries used to manage application-specific passwords.
// The query can contain the following macros that will be expanded as follows:
//      %a is replaced with the application name
//      %i is replaced with the application id
//      %p is replaced with the plaintext new password
// 		%s is replaced with the plaintext (hex) new password salt
//      %u is replaced with the username (from the session info)
//      %l is replaced with the local part of the username
//         (in case the username is an email address)
//      %d is replaced with the domain part of the username
//         (in case the username is an email address)

// Sample CREATE statement
// CREATE TABLE app_password (app_id int NOT NULL AUTO_INCREMENT KEY, application varchar(100) NOT NULL, username varchar(100) NOT NULL, domain varchar(100) NOT NULL, salt varchar(16) NULL, password varchar(100) NULL, created datetime);

// Sample Dovecot password query:
// password_query = SELECT username, domain, NULL AS password, 'Y' as nopassword FROM app_password WHERE username = '%n' AND password = SHA2(salt+REPLACE('%w',' ',''),"512")

// SQL query for displaying list of applications for which a password is set
$config['application_passwords_select_query'] = 'SELECT app_id, application, created FROM app_password WHERE username=%l AND domain=%d';

// SQL query for storing new application-specific password
$config['application_passwords_insert_query'] = 'INSERT INTO app_password (username, domain, application, salt, password, created) VALUES (%l, %d, %a, %s, SHA2(%s+%p,"256"), now())';

// SQL query for deleting an application-specific password
$config['application_passwords_delete_query'] = 'DELETE FROM app_password WHERE username=%l AND domain=%d AND app_id=%i';

// By default the crypt() function which is used to create the '%c' 
// parameter uses the md5 algorithm. To use different algorithms 
// you can choose between: des, md5, blowfish, sha256, sha512.
// Before using other hash functions than des or md5 please make sure
// your operating system supports the other hash functions.
$config['application_passwords_crypt_hash'] = 'md5';

// By default domains in variables are using unicode.
// Enable this option to use punycoded names
$config['application_passwords_idn_ascii'] = false;

// Path for dovecotpw (if not in $PATH)
$config['application_passwords_dovecotpw'] = '/usr/bin/doveadm pw';

// Dovecot method (dovecotpw -s 'method')
$config['application_passwords_dovecotpw_method'] = 'SSHA512';

// Enables use of password with crypt method prefix in %D, e.g. {MD5}$1$LUiMYWqx$fEkg/ggr/L6Mb2X7be4i1/
$config['application_passwords_dovecotpw_with_method'] = true;

// Using a password hash for %n and %q variables.
// Determine which hashing algorithm should be used to generate
// the hashed new and current password for using them within the
// SQL query. Requires PHP's 'hash' extension.
$config['application_passwords_hash_algorithm'] = 'sha1';

// You can also decide whether the hash should be provided
// as hex string or in base64 encoded format.
$config['application_passwords_hash_base64'] = false;
